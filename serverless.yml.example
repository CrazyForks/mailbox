service: mailbox

frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  memorySize: 128
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-west-2'}
  environment:
    REGION: ${self:provider.region}
    DYNAMODB_TABLE: "mailbox-${self:provider.stage}"
    DYNAMODB_TIME_INDEX: TimeIndex
    S3_BUCKET: example-mailbox # set this to your S3 bucket name
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/${self:provider.environment.DYNAMODB_TIME_INDEX}"
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: "arn:aws:s3::*:${self:provider.environment.S3_BUCKET}/*"
  apiGateway:
    shouldStartNameWithService: true

package:
  patterns:
    - '!./**'
    - './bin/**'

functions:
  email-receive:
    handler: bin/functions/email-receive
  emailsList:
    handler: bin/api/emails/list
    events:
      - http:
          path: /emails
          method: GET
          request:
            parameters:
              querystrings:
                year: true
                month: true
  emailsGet:
    handler: bin/api/emails/get
    events:
      - http:
          path: /emails/{messageID}
          method: GET
          request:
            parameters:
              paths:
                messageID: true
  emailsTrash:
    handler: bin/api/emails/trash
    events:
      - http:
          path: /emails/{messageID}/trash
          method: POST
          request:
            parameters:
              paths:
                messageID: true
  emailsDelete:
    handler: bin/api/emails/get
    events:
      - http:
          path: /emails/{messageID}
          method: DELETE
          request:
            parameters:
              paths:
                messageID: true

resources:
  Resources:
    MailboxDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: MessageID
            AttributeType: S
          - AttributeName: TypeYearMonth
            AttributeType: S
          - AttributeName: DateTime
            AttributeType: S
        KeySchema:
          - AttributeName: MessageID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.DYNAMODB_TIME_INDEX}
            KeySchema:
              - AttributeName: TypeYearMonth
                KeyType: HASH
              - AttributeName: DateTime
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 3
              WriteCapacityUnits: 1
